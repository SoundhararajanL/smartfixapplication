[{"D:\\smartfix project\\smartfixapplication\\src\\index.js":"1","D:\\smartfix project\\smartfixapplication\\src\\App.js":"2","D:\\smartfix project\\smartfixapplication\\src\\login.js":"3","D:\\smartfix project\\smartfixapplication\\src\\signup.js":"4","D:\\smartfix project\\smartfixapplication\\src\\reportWebVitals.js":"5","D:\\smartfix project\\smartfixapplication\\src\\home.js":"6","D:\\smartfix project\\smartfixapplication\\src\\display.js":"7","D:\\smartfix project\\smartfixapplication\\src\\form.js":"8","D:\\smartfix project\\smartfixapplication\\src\\formData.js":"9","D:\\smartfix project\\smartfixapplication\\src\\random.js":"10"},{"size":948,"mtime":1687233945112,"results":"11","hashOfConfig":"12"},{"size":525,"mtime":1687233945098,"results":"13","hashOfConfig":"12"},{"size":4122,"mtime":1687233945113,"results":"14","hashOfConfig":"12"},{"size":5746,"mtime":1687233950351,"results":"15","hashOfConfig":"12"},{"size":375,"mtime":1687233950345,"results":"16","hashOfConfig":"12"},{"size":16439,"mtime":1687768040266,"results":"17","hashOfConfig":"12"},{"size":13533,"mtime":1688112287995,"results":"18","hashOfConfig":"12"},{"size":8955,"mtime":1687233945105,"results":"19","hashOfConfig":"12"},{"size":11571,"mtime":1688110678741,"results":"20","hashOfConfig":"12"},{"size":5214,"mtime":1687934355575,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"xzmpom",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\smartfix project\\smartfixapplication\\src\\index.js",[],[],[],"D:\\smartfix project\\smartfixapplication\\src\\App.js",["57","58","59","60","61","62"],[],"import './App.css';\r\nimport Login from './login';\r\nimport Home from './home';\r\nimport FormPage from './form';\r\nimport TemplateList from './display';\r\nimport { Form } from 'react-router-dom';\r\nimport FormData from './formData'\r\nimport RandomFormGenerator from './random';\r\nfunction App() {\r\n  return (\r\n   <div>\r\n     {/* <Login /> */}\r\n     {/* < Home /> */}\r\n     {/* <TemplateList /> */}\r\n     {/* <FormPage />  */}\r\n     {/* <FormData/> */}\r\n     <RandomFormGenerator />\r\n     \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;","D:\\smartfix project\\smartfixapplication\\src\\login.js",["63","64","65","66","67"],[],"import React, { useEffect, useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport logo from './smartfix.png';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport login from './login.png';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n\r\n  const handleLogin = () => {\r\n    if (!username || !password) {\r\n      toast.error('Please fill in all the required fields.', { position: toast.POSITION.TOP_CENTER });\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:3000/persons/login', userData)\r\n      .then((response) => {\r\n        const success = response.data.success;\r\n\r\n        if (success) {\r\n          toast.success('Login successful!', {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 500,\r\n            onClose: () => {\r\n              navigate('/home', { state: { loginSuccess: true } });\r\n            }\r\n          });\r\n        } else {\r\n          toast.error('Invalid username or password', { position: toast.POSITION.TOP_CENTER });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        toast.error('Invalid username or password', { position: toast.POSITION.TOP_CENTER });\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div>\r\n\r\n\r\n        <section class=\"vh-100\">\r\n          <div class=\"container-fluid h-custom\">\r\n            <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n              <div class=\"col-md-9 col-lg-6 col-xl-5\">\r\n                <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp\"\r\n                  class=\"img-fluid\" alt=\"Sample image\" />\r\n              </div>\r\n              <div class=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\r\n                <form>\r\n                 \r\n                  <div class=\"divider d-flex align-items-center my-4\">\r\n                  <label class=\"form-label\" for=\"form3Example3\">LOGIN</label>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"form-outline mb-4\">\r\n                  <label class=\"form-label\" for=\"form3Example3\">Username</label>\r\n                    <input type=\"email\" id=\"form3Example3\" class=\"form-control form-control-lg\"\r\n                      onChange={(e) => setUsername(e.target.value.trim())}\r\n                      placeholder=\"Enter a User name\" />\r\n\r\n\r\n                  </div>\r\n\r\n\r\n                  <div class=\"form-outline mb-3\">\r\n                  <label class=\"form-label\" for=\"form3Example3\">password</label>\r\n\r\n                    <input type=\"password\" id=\"form3Example4\" class=\"form-control form-control-lg\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      placeholder=\"Enter password\" />\r\n                      \r\n                  </div>\r\n\r\n                  <div class=\"text-center text-lg-start mt-4 pt-2\">\r\n                    <button type=\"button\" class=\"btn btn-primary btn-lg\"\r\n                      onClick={handleLogin}\r\n                    >Login</button>\r\n\r\n                    <p class=\"small fw-bold mt-2 pt-1 mb-0\">Don't have an account?</p>\r\n                    <Link className='text' to='/signup'>\r\n                      <a href=\"#!\"\r\n                        class=\"link-danger\">Register</a></Link>\r\n                  </div>\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"d-flex flex-column flex-md-row text-center text-md-start justify-content-between py-4 px-4 px-xl-5 bg-primary\">\r\n            Smartfix 4.0\r\n            <div class=\"text-white mb-3 mb-md-0\">\r\n              Copyright Â© 2023. All rights reserved.\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Login;","D:\\smartfix project\\smartfixapplication\\src\\signup.js",["68","69"],[],"import React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport logo from './smartfix.png';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Signup() {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = () => {\r\n    if (!username || !email || !password) {\r\n      toast.error('Please fill in all the required fields.', { position: toast.POSITION.TOP_CENTER });\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}(?:\\.[a-zA-Z]{1,})?$/;\r\n    if (!emailRegex.test(email)) {\r\n      toast.error('Please enter a valid email address.', { position: toast.POSITION.TOP_CENTER });\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      toast.error('Password should be at least 6 characters long.', { position: toast.POSITION.TOP_CENTER });\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:3000/persons/signup', userData)\r\n      .then((response) => {\r\n        toast.success('User registered successfully!', {\r\n          position: toast.POSITION.TOP_CENTER,\r\n          autoClose: 500,\r\n          onClose: () => {\r\n            navigate('/login', { state: { loginSuccess: true } });\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        toast.error('Error occurred while registering user!', { position: toast.POSITION.TOP_CENTER });\r\n      });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUsername('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n   \r\n\r\n    <div>\r\n      <section class=\"vh-100\" >\r\n        <div class=\"container h-100\">\r\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n            <div class=\"col-lg-12 col-xl-11\">\r\n              <div class=\"si-card\">\r\n                <div class=\"card-body p-md-5\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <div class=\"sign-card\">\r\n\r\n                      <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign up</p>\r\n\r\n                      <form class=\"mx-1 mx-md-4\">\r\n\r\n                        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n                          <i class=\"fas fa-user fa-lg me-3 fa-fw\"></i>\r\n                          <div class=\"form-outline flex-fill mb-0\">\r\n                          <label class=\"form-label\" for=\"form3Example1c\">Your Name</label>\r\n                            <input type=\"text\" id=\"form3Example1c\"\r\n                              value={username}\r\n                              required\r\n                              placeholder='Enter Your Name'\r\n                              onChange={(e) => setUsername(e.target.value.trim())}\r\n                              class=\"form-control\" />\r\n\r\n                            \r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n                          <i class=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\r\n                          <div class=\"form-outline flex-fill mb-0\">\r\n                          <label class=\"form-label\" for=\"form3Example3c\">Your Email</label>\r\n                            <input type=\"email\" id=\"form3Example3c\"\r\n                              value={email}\r\n                              placeholder='Enter Your Email'\r\n                              onChange={(e) => setEmail(e.target.value.trim())}\r\n                              class=\"form-control\" />\r\n                           \r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n                          <i class=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\r\n                          <div class=\"form-outline flex-fill mb-0\">\r\n                          <label class=\"form-label\" for=\"form3Example4c\">Password</label>\r\n                            <input type=\"password\" id=\"form3Example4c\"\r\n                              value={password}\r\n                              placeholder='Enter Your Password'\r\n                              onChange={(e) => setPassword(e.target.value)}\r\n                              class=\"form-control\" />\r\n                            \r\n                          </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\r\n                          <button type=\"button\" class=\"btn btn-success btn-lg mr-2\"\r\n                          onClick={handleSignup}\r\n                          >Submit</button>\r\n                          <button type=\"button\" class=\"btn btn-danger btn-lg\"\r\n                          onClick={handleReset}\r\n                          >Reset</button>\r\n                        </div>\r\n\r\n\r\n\r\n                      </form>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\r\n\r\n                      <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\r\n                        class=\"sign-image\" alt=\"Sample image\" />\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <ToastContainer position='top-center' /> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","D:\\smartfix project\\smartfixapplication\\src\\reportWebVitals.js",[],[],"D:\\smartfix project\\smartfixapplication\\src\\home.js",["70"],[],"D:\\smartfix project\\smartfixapplication\\src\\display.js",["71","72"],[],"D:\\smartfix project\\smartfixapplication\\src\\form.js",["73","74","75","76","77"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FormPage = () => {\r\n  const [templateNames, setTemplateNames] = useState([]);\r\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n  const [fields, setFields] = useState([]);\r\n  const [formValues, setFormValues] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchTemplateNames();\r\n\r\n    const interval = setInterval(fetchTemplateNames, 5000); // Refresh every 5 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval); // Clear the interval on component unmount\r\n    };\r\n  }, []);\r\n\r\n  const fetchTemplateNames = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/get');\r\n      setTemplateNames(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching template names:', error);\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = async (templateId, selectedOption) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/getFields/${templateId}`);\r\n      const templateFields = response.data;\r\n      setSelectedTemplate(selectedOption);\r\n      setFields(templateFields);\r\n      setFormValues({});\r\n    } catch (error) {\r\n      console.error('Error fetching template fields:', error);\r\n    }\r\n  };\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n  \r\n    const field = fields.find((field) => field.field.toLowerCase() === name.toLowerCase());\r\n    if (field && field.required && field.type === 'email') {\r\n      // email validation code\r\n    } else if (field && field.type === 'number' && field.range) {\r\n      const { NumberMin, NumberMax } = field.range;\r\n      const enteredNumber = Number(value);\r\n  \r\n      if ((NumberMin !== null && enteredNumber < NumberMin) || (NumberMax !== null && enteredNumber > NumberMax)) {\r\n        const errorMessage = NumberMin !== null && NumberMax !== null\r\n          ? `Please enter a value between ${NumberMin} and ${NumberMax}.`\r\n          : NumberMin !== null\r\n            ? `Please enter a value greater than or equal to ${NumberMin}.`\r\n            : `Please enter a value less than or equal to ${NumberMax}.`;\r\n  \r\n        event.target.setCustomValidity(errorMessage);\r\n      } else {\r\n        event.target.setCustomValidity('');\r\n      }\r\n    } else if (field && field.type === 'date' && field.range) {\r\n      const { startDate, endDate } = field.range;\r\n      const selectedDate = new Date(value);\r\n      const minDate = startDate ? new Date(startDate) : null;\r\n      const maxDate = endDate ? new Date(endDate) : null;\r\n  \r\n      const formatDate = (date) => {\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n        const year = date.getFullYear().toString();\r\n        return `${day}-${month}-${year}`;\r\n      };\r\n  \r\n      if ((minDate && selectedDate < minDate) || (maxDate && selectedDate > maxDate)) {\r\n        const formattedStartDate = minDate ? formatDate(minDate) : null;\r\n        const formattedEndDate = maxDate ? formatDate(maxDate) : null;\r\n  \r\n        const errorMessage = formattedStartDate && formattedEndDate\r\n          ? `Please enter a date between ${formattedStartDate} and ${formattedEndDate}.`\r\n          : formattedStartDate\r\n            ? `Please enter a date greater than or equal to ${formattedStartDate}.`\r\n            : `Please enter a date less than or equal to ${formattedEndDate}.`;\r\n  \r\n        event.target.setCustomValidity(errorMessage);\r\n      } else {\r\n        event.target.setCustomValidity('');\r\n      }\r\n    } else {\r\n      event.target.setCustomValidity('');\r\n    }\r\n  \r\n    setFormValues((prevValues) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (selectedTemplate) {\r\n      const requiredFields = fields.filter((field) => field.required);\r\n      const missingRequiredFields = requiredFields.filter((field) => !formValues[field.field]);\r\n\r\n      if (missingRequiredFields.length > 0) {\r\n        toast.error('Please fill in all the required fields.');\r\n      } else {\r\n        axios\r\n          .post('http://localhost:3000/form', {\r\n            templateName: selectedTemplate,\r\n            fields: Object.entries(formValues).map(([field, value]) => ({ field, value })),\r\n          })\r\n          .then((response) => {\r\n            console.log('Form data submitted successfully:', response.data);\r\n            setFormValues({});\r\n            toast.success('Form registered successfully', { position: toast.POSITION.TOP_CENTER, autoClose: 1000 });\r\n            setTimeout(() => {\r\n              window.location.reload(); // Reload the page after a delay (e.g., 2 seconds)\r\n            }, 2000); // Reload the page\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error submitting form data:', error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    // Use a comprehensive regular expression for email validation\r\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleDeleteTemplate = (templateName) => {\r\n    axios\r\n      .delete(`http://localhost:3000/delete/${templateName}`)\r\n      .then((response) => {\r\n        console.log('Template deleted successfully:', response.data);\r\n        fetchTemplateNames();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting template:', error);\r\n      });\r\n  };\r\n\r\n  const handleDisplay = () => {\r\n    navigate('/display', { state: { loginSuccess: true } });\r\n  };\r\n  \r\n  const handleformData = () => {\r\n    navigate('/formdata', { state: { loginSuccess: true } });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"bold-text\">Form</h1>\r\n      <div>\r\n        <button onClick={handleDisplay} type=\"button\" className=\"btn btn-outline-primary\">\r\n          Back\r\n        </button >\r\n        <button onClick={handleformData} className='button-37'>\r\n          Form collection\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <label className=\"badge bg-secondary\" htmlFor=\"templateSelect\">\r\n          Select Form\r\n        </label>\r\n        <select\r\n          className=\"form-select\"\r\n          id=\"templateSelect\"\r\n          onChange={(e) =>\r\n            handleSelectChange(e.target.value, e.target.options[e.target.selectedIndex].text)\r\n          }\r\n        >\r\n          <option value=\"\" hidden>\r\n            Select a template\r\n          </option>\r\n          {templateNames.map((template) => (\r\n            <option key={template._id} value={template._id}>\r\n              {template.templateName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {selectedTemplate && (\r\n        <div>\r\n          <h3 className=\"italic-text\">{selectedTemplate}</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            {fields.map((field, index) => (\r\n              <div className=\"input-group mb-3\" key={index}>\r\n                <label className=\"input-group-text\" htmlFor={field.field}>\r\n                  {field.field} {field.required && <span style={{ color: 'red' }} className=\"label-badge\">*</span>}\r\n                </label>\r\n                {field.field.toLowerCase() === 'email' ? (\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    id={field.field}\r\n                    name={field.field}\r\n                    value={formValues[field.field] !== undefined ? formValues[field.field] : ''}\r\n                    onChange={handleInputChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type={field.type}\r\n                    id={field.field}\r\n                    name={field.field}\r\n                    value={formValues[field.field] !== undefined ? formValues[field.field] : ''}\r\n                    onChange={handleInputChange}\r\n                    required={field.required}\r\n                    min={field.range ? field.range.NumberMin : undefined}\r\n                    max={field.range ? field.range.NumberMax : undefined}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n            <button className=\"btn btn-success\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPage;\r\n","D:\\smartfix project\\smartfixapplication\\src\\formData.js",["78","79","80"],[],"D:\\smartfix project\\smartfixapplication\\src\\random.js",[],[],{"ruleId":"81","severity":1,"message":"82","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"85","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":12},{"ruleId":"81","severity":1,"message":"86","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":16},{"ruleId":"81","severity":1,"message":"87","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"81","severity":1,"message":"88","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":14},{"ruleId":"81","severity":1,"message":"89","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":16},{"ruleId":"81","severity":1,"message":"90","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"91","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":12},{"ruleId":"81","severity":1,"message":"92","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":13},{"ruleId":"81","severity":1,"message":"93","line":13,"column":9,"nodeType":"83","messageId":"84","endLine":13,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":62,"column":17,"nodeType":"96","endLine":63,"endColumn":58},{"ruleId":"81","severity":1,"message":"91","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":136,"column":23,"nodeType":"96","endLine":137,"endColumn":65},{"ruleId":"81","severity":1,"message":"97","line":18,"column":10,"nodeType":"83","messageId":"84","endLine":18,"endColumn":19},{"ruleId":"81","severity":1,"message":"98","line":6,"column":3,"nodeType":"83","messageId":"84","endLine":6,"endColumn":9},{"ruleId":"81","severity":1,"message":"99","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":14},{"ruleId":"81","severity":1,"message":"99","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"100","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":25},{"ruleId":"81","severity":1,"message":"101","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"81","severity":1,"message":"102","line":138,"column":9,"nodeType":"83","messageId":"84","endLine":138,"endColumn":22},{"ruleId":"81","severity":1,"message":"103","line":144,"column":9,"nodeType":"83","messageId":"84","endLine":144,"endColumn":29},{"ruleId":"81","severity":1,"message":"104","line":22,"column":10,"nodeType":"83","messageId":"84","endLine":22,"endColumn":20},{"ruleId":"81","severity":1,"message":"105","line":22,"column":22,"nodeType":"83","messageId":"84","endLine":22,"endColumn":35},{"ruleId":"81","severity":1,"message":"106","line":109,"column":9,"nodeType":"83","messageId":"84","endLine":109,"endColumn":26},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'FormPage' is defined but never used.","'TemplateList' is defined but never used.","'Form' is defined but never used.","'FormData' is defined but never used.","'useEffect' is defined but never used.","'logo' is defined but never used.","'login' is defined but never used.","'location' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donât need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'showTable' is assigned a value but never used.","'faPlus' is defined but never used.","'Link' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faTrash' is defined but never used.","'validateEmail' is assigned a value but never used.","'handleDeleteTemplate' is assigned a value but never used.","'searchName' is assigned a value but never used.","'setSearchName' is assigned a value but never used.","'handleColumnClick' is assigned a value but never used."]